===============================
 How to Use 2-matrix_divided.py
===============================

This library is very simple, since it only has one function called
``matrix_divided()``.

Numbers
=======

``matrix_divided()`` returns a new matrix that all their elements were
divided.

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3],[4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> print(matrix_divided(matrix, "a"))
    Traceback (most recent call last):
    ...
    TypeError: div must be a number
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero
    >>> matrix = [[1, 2, 3],[4, 5]]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size
    >>> matrix = [[1, 2, 3],[4, "a", 5]]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix = [[]]
    >>> print(matrix_divided(matrix, div=3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> print(matrix_divided(matrix=[[1]], div=1))
    [[1.0]]

